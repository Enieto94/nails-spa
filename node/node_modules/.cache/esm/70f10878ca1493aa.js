let BlogModel;_ca1‍.x([["getAllBlogs",()=>getAllBlogs],["getBlog",()=>getBlog],["createBlog",()=>createBlog],["updateBlog",()=>updateBlog],["deleteBlog",()=>deleteBlog]]);_ca1‍.w("../models/BlogModel.js",[["default",["BlogModel"],function(v){BlogModel=v}]]);//  importamos el modelo


//  metodos para el CRUD

// Mostrar todos los registros 
       const getAllBlogs = async (req, res) => {
    try {
        const blogs = await BlogModel.findAll()
        res.json(blogs)
        BlogModel.findAll()
    } catch (error) {
        res.json({ message: error.message })
    }
}

//  Mostrar un registro
       const getBlog = async (req, res) => {
    try {
        const blog = await BlogModel.findAll({
            where: {
                id: req.params.id
            }
        })
        res.json({ blog });
    } catch (error) {

    }
}

//  crear un registro
       const createBlog = async (req, res) => {
    try {
        await BlogModel.create(req.body)
        res.json({
            "message": "Registro creado exitosamente! "
        })
    } catch (error) {

    }
}

//  actualizar un registro
       const updateBlog = async (req, res) => {
    try {
        await BlogModel.update(req.Body, {
            where: { id: req.params.id }
        })
        res.json({
            "message": "¡Registro actualizado correctamente!"
        })
    } catch (error) {
        res.json({ message: error.message })
    }
}

// Eliminar un registro

       const deleteBlog = async (req, res) => {
    try {
        await BlogModel.destroy({
            where: { id: req.params.id }
        })
        res.json({
            "message": "¡Registro actualizado correctamente!"
        })
    } catch (error) {
        res.json({ message: error.message })
    }
}